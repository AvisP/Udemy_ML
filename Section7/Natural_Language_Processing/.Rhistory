setwd("C:/Users/ME/Dropbox/Kaggle/Section 7/Natural_Language_Processing")
# Natural Language Processing
# Importing dataset
dataset = ead.delim('Restaurant_Reviews.tsv',quote = '', stringAsFactors = FALSE
dataset = ead.delim('Restaurant_Reviews.tsv',quote = '', stringAsFactors = FALSE
dataset = read.delim('Restaurant_Reviews.tsv',quote = '', stringAsFactors = FALSE
)
dataset = read.delim('Restaurant_Reviews.tsv',quote = '', stringsAsFactors = FALSE)
View(dataset)
View(dataset)
install.packages('tm')
library(tm)
corpus = VCorpus(VectorSource(dataset$Review))
corpus = tm_map(corpus, content_transformer(tolower))
as.character(corpus[[1]])
as.character(corpus[[841]])
corpus = tm_map(corpus, removeNumbers)
as.character(corpus[[841]])
as.character(corpus[[1]])
corpus = tm_map(corpus, removePunctuation)
as.character(corpus[[1]])
install.packages('SnowballC')
library(SnowballC)
corpus = tm_map(corpus, removeWords, stopwords())
as.character(corpus[[1]])
corpus = tm_map(corpus, removeWords, stemDocument)
corpus = tm_map(corpus, stemDocument)
as.character(corpus[[1]])
corpus = tm_map(corpus, stripWhitespace)
as.character(corpus[[841]])
dtm = DocumentTermMatrix(corpus)
dtm = removeSparseTerms(dtm,0.99)
dtm
dtm = DocumentTermMatrix(corpus)
dtm = removeSparseTerms(dtm,0.999)
dtm
dataset = as.data.frame(as.matrix(dtm))
View(dataset)
View(dataset)
dataset_original = read.delim('Restaurant_Reviews.tsv',quote = '', stringsAsFactors = FALSE)
View(dataset_original)
dataset$Liked = datset_original$Liked
View(dataset)
View(dataset)
datset$Liked = factor(datset$Liked, levels = c(0,1))
dataset$Liked = factor(datset$Liked, levels = c(0,1))
dataset$Liked = factor(dataset$Liked, levels = c(0,1))
dataset = as.data.frame(as.matrix(dtm))
dataset$Liked = dataset_original$Liked
dataset$Liked = factor(dataset$Liked, levels = c(0,1))
library(caTools)
set.seed(123)
split = sample.split(datset$Liked, SplitRatio = 0.8)
training-set = subset(dataset,split == TRUE)
training-set = subset(dataset,split == FALSE)
split = sample.split(dataset$Liked, SplitRatio = 0.8)
training-set = subset(dataset,split == TRUE)
training-set = subset(dataset,split == FALSE)
split = sample.split(dataset$Liked, SplitRatio = 0.8)
training_set = subset(dataset,split == TRUE)
test_set = subset(dataset,split == FALSE)
library(randomForest)
classifier = randomForest( x = training_set[-692],
y = training_set$Liked,
ntree = 10)
# Predicting the Test set Results
y_pred = predict(classifier,newdata = test_set[-692])
# Making the Confusion Matrix
cm = table(test_set[,692],y_pred)
cm
